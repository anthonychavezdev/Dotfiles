# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/7cb67c36-ee56-46f2-a8e6-328bbcaac696";
      fsType = "btrfs";
      options = [ "subvol=@" "ssd" "space_cache" "commit=120" "compress=zstd" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/7cb67c36-ee56-46f2-a8e6-328bbcaac696";
      fsType = "btrfs";
      options = [ "subvol=@home" "ssd" "space_cache" "commit=120" "compress=zstd" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/0612da0d-be86-4f8d-ba8f-bb7c99f88a82";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/CAE9-3D85";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" "umask=0077" "shortname=winnt" ];
    };

  fileSystems."/media/Games" =
    { device = "/dev/disk/by-uuid/67DC-7632";
      fsType = "exfat";
      options = [ "uid=1000" "gid=1000" "umask=0022" "discard" "nofail" ];
    };

  fileSystems."/media/Games/SteamLibrary/steamapps/compatdata" =
  { device = "/home/anthony/.local/share/Steam/steamapps/compatdata";
    fsType = "none";
    options = [ "defaults" "bind" ];
  };

  fileSystems."/media/Games/SteamLibrary/steamapps/shadercache" =
  { device = "/home/anthony/.local/share/Steam/steamapps/shadercache";
    fsType = "none";
    options = [ "defaults" "bind" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
